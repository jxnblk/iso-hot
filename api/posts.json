[{"title":"What is Universal?","id":1,"filename":"intro.md","date":"2015-08-01T00:00:00.000Z","updated":"2015-08-09T18:47:51.446Z","excerpt":"Universal is a work-in-progress React-based demonstration, boilerplate, and series of posts for exploring several current technologies. It shares code across the server and client and uses webpack hot loading for development.","draft":false,"content":"This application uses\n[React](http://facebook.github.io/react/),\n[React Hot Loader](https://gaearon.github.io/react-hot-loader/),\n[Redux](https://github.com/gaearon/redux),\n[react-router](http://rackt.github.io/react-router/),\n[webpack](http://webpack.github.io/),\n[Node Express](http://expressjs.com/),\nand\n[Babel](https://babeljs.io/).\n\nUniversal has three modes: production, development, and static.\nIf you’re viewing this on <http://jxnblk.com/universal>, you’re seeing the static version,\nwhich allows CRUD operation of posts in memory.\nThis doesn’t actually save anything, and refreshing the page will bring back the original data.\n\nWhen running in production or development mode, it uses an API to read and write markdown files to disk.\nThe view layer of the application relies on React to render both static HTML and client-side JavaScript.\nWhen JavaScript is disabled, routing and form submission is handled with plain HTML.\nWith JavaScript enabled, client-side routing and form submission takes over.\nThis is meant as a rough demonstration of building progressively enhanced applications with React.\n"},{"title":"Potatoes!","id":2,"filename":"potatoes.md","date":"2015-08-03T02:21:10.068Z","updated":"2015-08-09T17:28:39.458Z","draft":true,"content":"### Potatoes gonna potate\n\n![](http://media.giphy.com/media/auJjZlb3h1Ga4/giphy.gif)\n"},{"title":"Running Locally","id":3,"filename":"running-locally.md","date":"2015-08-09T18:11:32.974Z","updated":"2015-08-09T18:11:32.974Z","excerpt":"Get started with development mode and React Hot Loader.","draft":false,"content":"\nRunning Universal in development mode is a great way to understand the benefits of hot loading and rapid prototyping.\n\n## Installation\n\n```sh\ngit clone https://github.com/jxnblk/universal.git\ncd universal\nnpm install\n```\n\n## Run\n\n```sh\nnpm run dev\n```\n\nOpen <http://localhost:3000> in your browser. Creating, editing and deleting posts will save changes to disk.\n\n## Development\nWith React Hot Loader running, making changes to any React component should automatically refresh the page while maintaining the application state.\n\nRead more: [React Hot Loader](https://github.com/gaearon/react-hot-loader)\n"},{"title":"Styles","id":4,"filename":"styles.md","date":"2015-08-09T18:43:20.339Z","updated":"2015-08-09T18:47:05.138Z","excerpt":"Universal uses virtually no CSS. Learn how JavaScript and React’s component architecture makes this a great option for handling styles.","draft":false,"content":"With the exception of the `<Prose>` component used for each post, this application uses zero CSS and avoids any complications involved with the cascade.\n\nTo maintain consistency, fonts, colors, and a spacing scale are generated in the `util/styles.js` module. The styles module uses\n[spectralize](https://github.com/jxnblk/spectralize)\nto generate color scales\nand\n[simple-modular-scale](https://github.com/jxnblk/simple-modular-scale)\nto generate a sizing scale for fonts and spacing.\n\nAny component can import the styles module and code duplication is prevented through the use of React components.\n"}]